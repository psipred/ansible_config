#SignalP
# http://www.cbs.dtu.dk/services/SignalP/
#NetPhos/ape-1.0
# http://www.cbs.dtu.dk/services/NetPhos/
#NETNGLYC
# http://www.cbs.dtu.dk/services/NetNGlyc/
#NetOGlyc
# http://www.cbs.dtu.dk/services/NetOGlyc-3.1/
#PSORT
# https://github.com/fmaguire/WoLFPSort
#COILS
# http://www.russelllab.org/coils/
#EMBOSS
# http://emboss.sourceforge.net/

---

  - name: Check if signalP is installed
    stat: path=/opt/signalp-4.1
    register: signalp_exist

  # - name: Download signalP
  #   when: signalp_exist.stat.exists == False
  #   shell: "chdir=/opt/ wget --timeout 120 http://bioinfadmin.cs.ucl.ac.uk/downloads/ffpred_feature_suite/signalp-4.1e.Linux.tar.gz"
  #   register: get_url_result

  - name: Download signalP
    when: signalp_exist.stat.exists == False
    get_url:
      url: http://bioinfadmin.cs.ucl.ac.uk/downloads/ffpred_feature_suite/signalp-4.1e.Linux.tar.gz
      dest: /opt/
      timeout: 120
    register: get_url_result

  - name: untar signalp
    when: signalp_exist.stat.exists == False
    unarchive:
      src: /opt/signalp-4.1e.Linux.tar.gz
      dest: /opt/
      remote_src: yes

  - name: copy over the configured signalp script
    when: signalp_exist.stat.exists == False
    sudo: true
    copy:
      src: files/signalp
      dest: /opt/signalp-4.1
      mode: "uog+x"

  - name: Check if nephpos is installed
    stat: path=/opt/ape-1.0
    register: netphos_exist

  # - name: Download netphos
  #   when: netphos_exist.stat.exists == False
  #   shell: "chdir=/opt/ wget --timeout 120 http://bioinfadmin.cs.ucl.ac.uk/downloads/ffpred_feature_suite/netphos-3.1.Linux.tar"
  #   register: get_url_result

  - name: Download netphos
    when: netphos_exist.stat.exists == False
    get_url:
      url: http://bioinfadmin.cs.ucl.ac.uk/downloads/ffpred_feature_suite/netphos-3.1.Linux.tar
      dest: /opt/
      timeout: 120
    register: get_url_result

  - name: untar netphos
    when: netphos_exist.stat.exists == False
    unarchive:
      src: /opt/netphos-3.1.Linux.tar
      dest: /opt/
      remote_src: yes

  # NOTE THE THE ARCHITECTURE DETECTION DOES NOT WORK IN THE APE SCRIPT FOR x86_64
  - name: copy over the configured ape script
    when: netphos_exist.stat.exists == False
    sudo: true
    copy:
      src: files/ape
      dest: /opt/ape-1.0
      mode: "uog+x"
#
  - name: Check if netNGlyc is installed
    stat: path=/opt/netNglyc-1.0
    register: netnglyc_exist

  # - name: Download netnglyc
  #   when: netnglyc_exist.stat.exists == False
  #   shell: "chdir=/opt/ wget --timeout 120 http://bioinfadmin.cs.ucl.ac.uk/downloads/ffpred_feature_suite/netNglyc-1.0c.Linux.tar.Z"
  #   register: get_url_result

  - name: Download netnglyc
    when: netnglyc_exist.stat.exists == False
    get_url:
      url: http://bioinfadmin.cs.ucl.ac.uk/downloads/ffpred_feature_suite/netNglyc-1.0c.Linux.tar.Z
      dest: /opt/
      timeout: 120
    register: get_url_result

  - name: untar netNglyc
    when: netnglyc_exist.stat.exists == False
    unarchive:
      src: /opt/netNglyc-1.0c.Linux.tar.Z
      dest: /opt/
      remote_src: yes

  - name: copy over the configured netnglyc script
    when: netnglyc_exist.stat.exists == False
    sudo: true
    copy:
      src: files/netNglyc
      dest: /opt/netNglyc-1.0
      mode: "uog+x"

  - name: Check if netOGlyc is installed
    stat: path=/opt/netOglyc-3.1d
    register: netoglyc_exist

  # - name: Download netoglyc
  #   when: netoglyc_exist.stat.exists == False
  #   shell: "chdir=/opt/ wget --timeout 120 http://bioinfadmin.cs.ucl.ac.uk/downloads/ffpred_feature_suite/netOglyc-3.1d.Linux.tar.Z"
  #   register: get_url_result

  - name: Download netoglyc
    when: netoglyc_exist.stat.exists == False
    get_url:
      url: http://bioinfadmin.cs.ucl.ac.uk/downloads/ffpred_feature_suite/netOglyc-3.1d.Linux.tar.Z
      dest: /opt/
      timeout: 120
    register: get_url_result

  - name: untar netOglyc
    when: netoglyc_exist.stat.exists == False
    unarchive:
      src: /opt/netOglyc-3.1d.Linux.tar.Z
      dest: /opt/
      remote_src: yes

  - name: copy over the configured netOglyc script
    when: netoglyc_exist.stat.exists == False
    sudo: true
    copy:
      src: files/netOglyc
      dest: /opt/netOglyc-3.1d
      mode: "uog+x"

  - name: Check if wolfpsort is installed
    stat: path=/opt/WoLFPSort-master
    register: psort_exist

  # - name: Download wolfpsort
  #   when: psort_exist.stat.exists == False
  #   shell: "chdir=/opt/ wget --timeout 120 http://bioinfadmin.cs.ucl.ac.uk/downloads/ffpred_feature_suite/wolfpsort_0.2.zip"
  #   register: get_url_result

  - name: Download wolfpsort
    when: psort_exist.stat.exists == False
    get_url:
      url: http://bioinfadmin.cs.ucl.ac.uk/downloads/ffpred_feature_suite/wolfpsort_0.2.zip
      dest: /opt/
      timeout: 120
    register: get_url_result

  - name: untar wolfpsort
    when: psort_exist.stat.exists == False
    unarchive:
      src: /opt/wolfpsort_0.2.zip
      dest: /opt/
      remote_src: yes

  - name: Check if coils is installed
    stat: path=/opt/coils
    register: coils_exist

  # - name: Download coils
  #   when: coils_exist.stat.exists == False
  #   shell: "chdir=/opt/ wget --timeout 120 http://bioinfadmin.cs.ucl.ac.uk/downloads/ffpred_feature_suite/coils.tar.gz"
  #   register: get_url_result

  - name: Download coils
    when: coils_exist.stat.exists == False
    get_url:
      url: http://bioinfadmin.cs.ucl.ac.uk/downloads/ffpred_feature_suite/coils.tar.gz
      dest: /opt/
      timeout: 120
    register: get_url_result

  - name: untar coils
    when: coils_exist.stat.exists == False
    unarchive:
      src: /opt/coils.tar.gz
      dest: /opt/
      remote_src: yes

  - name: compile coils
    shell: "cd /opt/coils; cc -O2 -I. -o ncoils ncoils.c read_matrix.c -lm"
    when: coils_exist.stat.exists == False
#
#
  - name: Check if EMBOSS is installed
    stat: path=/opt/EMBOSS-6.4.0
    register: emboss_exist

# THIS DID NOT INSTALL CORRECTLY. configure needs a prefix AND the resulting
# make file needs to be edited to remove jemboss from line 279

  # - name: Download EMBOSS
  #   when: emboss_exist.stat.exists == False
  #   shell: "chdir=/opt/ wget --timeout 120 http://bioinfadmin.cs.ucl.ac.uk/downloads/ffpred_feature_suite/EMBOSS-6.4.0.tar.gz"
  #   register: get_url_result
  - name: Download EMBOSS
    when: emboss_exist.stat.exists == False
    get_url:
      url: http://bioinfadmin.cs.ucl.ac.uk/downloads/ffpred_feature_suite/EMBOSS-6.4.0.tar.gz
      dest: /opt/
      timeout: 120
    register: get_url_result

  - name: untar emboss
    when: emboss_exist.stat.exists == False
    unarchive:
      src: /opt/EMBOSS-6.4.0.tar.gz
      dest: /opt/
      remote_src: yes

  - name: configure emboss
    shell: "cd /opt/EMBOSS-6.4.0; ./configure --prefix=/opt/EMBOSS-6.4.0/"
    when: emboss_exist.stat.exists == False

  - name: edit Makefile
    shell: "cd /opt/EMBOSS-6.4.0; sed -i 's/SUBDIRS = plplot ajax nucleus emboss test doc jemboss/SUBDIRS = plplot ajax nucleus emboss test doc/g' Makefile"
    when: emboss_exist.stat.exists == False

  - name: make emboss
    shell: "cd /opt/EMBOSS-6.4.0; make"
    when: emboss_exist.stat.exists == False

  - name: install emboss
    shell: "cd /opt/EMBOSS-6.4.0; make install"
    when: emboss_exist.stat.exists == False

  - name: Check if ffpred is installed
    stat: path=/opt/ffpred3
    register: ffpred_exist

  - name : Check Out FFPRED from GIT
    when: ffpred_exist.stat.exists == False
    git:
      repo: https://github.com/psipred/FFPred4.git
      dest: /opt/ffpred3
      clone: yes
      force: yes

  - name: Download ffpredSVMs
    when: ffpred_exist.stat.exists == False
    get_url:
      url: http://bioinfadmin.cs.ucl.ac.uk/downloads/ffpred/SVMs.tar.gz
      dest: /opt/
      timeout: 120
    register: get_url_result


  - name: untar ffpred SVMs
    when: ffpred_exist.stat.exists == False
    unarchive:
      src: /opt/SVMs.tar.gz
      dest: /opt/
      remote_src: yes
      extra_opts: "-h"

  - name: remove SVM tarball
    shell: "cd /opt/; rm SVMs.tar.gz"
    when: ffpred_exist.stat.exists == False

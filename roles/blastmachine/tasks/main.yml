---

  - name: Check if we the blast is installed
    stat: path=/usr/local/bin/blastp
    register: blastp_exist

  - name: Download BLAST+ tarball
    when: blastp_exist.stat.exists == False
    get_url:
      url: ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/ncbi-blast-2.2.31+-src.tar.gz
      dest: /opt/
      timeout: 120
    register: get_url_result

  - name: unarchive blast
    when: blastp_exist.stat.exists == False
    unarchive:
      src: /opt/ncbi-blast-2.2.31+-src.tar.gz
      dest: /opt/
      remote_src: yes

  - name: configure blast
    shell: cd /opt/ncbi-blast-2.2.31+-src/c++; ./configure
    when: get_url_result.changed

  - name: make blast
    shell: cd /opt/ncbi-blast-2.2.31+-src/c++; make
    when: get_url_result.changed

  - name: install blast
    shell: cd /opt/ncbi-blast-2.2.31+-src/c++; make install
    when: get_url_result.changed

  - name: Check if we have uniref90
    stat: path=/opt/uniref/uniref90.fasta.gz
    register: uniref_exist

  - name: Make uniref dir
    file:
      path: /opt/uniref/
      state: directory
    when: uniref_exist.stat.exists == False

  # - name: Download uniref90
  #   when: uniref_exist.stat.exists == False
  #   get_url:
  #     url: ftp://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.gz
  #     dest: /opt/uniref/
  #     timeout: 120
  #   register: get_url_result

#we wget this so we don't do it in /tmp incase the disk is too small
  - name: Download uniref90
    shell: "chdir=/opt/uniref  wget --timeout 120 ftp://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.g"
    register: get_url_result
    # until: get_url_result.stdout.find("Unable to establish SSL connection") == -1
    # retries: 2
    # delay: 10
    when: uniref_exist.stat.exists == False

  - name: unarchive uniref
    when: uniref_exist.stat.exists == False
    unarchive:
      src: /opt/uniref/uniref90.fasta.gz
      dest: /opt/uniref/
      remote_src: yes

  - name: Run formatdb
    shell: cd /opt/uniref; /usr/local/bin/makeblastdb -in aa_test_uniref.fasta -dbtype prot
  #  when: uniref_exist.stat.exists == False

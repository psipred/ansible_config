---

  - name: Check if we the blast is installed
    stat: path=/usr/local/bin/blastp
    register: blastp_exist

  - name: Download BLAST+ tarball
    shell: "chdir=/opt/ wget --timeout 120 ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/ncbi-blast-2.2.31+-src.tar.gz -O ncbi-blast-2.2.31+-src.tar.gz"
    when: blastp_exist.stat.exists == False
    register: get_url_result
    until: get_url_result.stdout.find("Unable to establish SSL connection") == -1
    retries: 10
    delay: 10

  - name: untar the tarball
    shell: cd /opt/; tar -zxvf ncbi-blast-2.2.31+-src.tar.gz
    when: get_url_result.changed

  - name: configure blast
    shell: cd /opt/ncbi-blast-2.2.31+-src/c++; ./configure
    when: get_url_result.changed

  - name: make blast
    shell: cd /opt/ncbi-blast-2.2.31+-src/c++; make
    when: get_url_result.changed

  - name: install blast
    shell: cd /opt/ncbi-blast-2.2.31+-src/c++; make install
    when: get_url_result.changed

  - name: Check if we have uniref90
    stat: path=/opt/uniref/uniref90.fasta.gz
    register: uniref_exist

  - name: Make uniref dir
    file:
      path: /opt/uniref/
      state: directory
    when: uniref_exist.stat.exists == False

  # - name: Download uniref90
  #   shell: "chdir=/opt/uniref/ wget --timeout 120 ftp://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.gz -O uniref90.fasta.gz"
  #   when: uniref_exist.stat.exists == False
  #   register: get_uniref_result
  #   until: get_uniref_result.stdout.find("Unable to establish SSL connection") == -1
  #   retries: 10
  #   delay: 10
  #
  # - name: unzip uniref90
  #   shell: cd /opt/uniref/; gunzip uniref90.fasta.gz
  #   when: uniref_exist.stat.exists == False

  - name: Copy uniref_test_db
    copy:
      src: files/aa_test_uniref.fasta
      dest: /opt/uniref/
    when: uniref_exist.stat.exists == False

  - name: Run formatdb
    shell: cd /opt/uniref; /usr/local/bin/makeblastdb -in aa_test_uniref.fasta -dbtype prot
  #  when: uniref_exist.stat.exists == False

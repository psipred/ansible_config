---

  - name: Install postgreSQL
    yum:
      pkg: postgresql
      state: latest
    sudo: yes
    register: postgres_installed

  - name: Get the current firewalld rules
    shell: firewall-cmd --list-all
    register: firewalldrules
    always_run: yes
    sudo: yes

  - name: Add Postgres firewalld rules
    command: firewall-cmd --zone=public --add-port=5432/tcp --permanent
    sudo: yes
    when: firewalldrules.stdout.find("5432/tcp") == -1

  - name: Check if postgresDB location exists
    stat: "path={{ postgres_db_path }}"
    register: postgresDB_exist

  - name: Make postgres db directory
    file:
      path: "{{ postgres_db_path }}"
      state: directory
      owner: "{{ postgres_user }}"
    when: postgresDB_exist.stat.exists == False

  - name: Initialise postgresDB
    shell: "/bin/initdb -D {{ postgres_db_path }}"
    become_user: "{{ postgres_user }}"
    when: postgresDB_exist.stat.exists == False

  - name: Check postgres status
    shell: ps aux | grep postgres
    register: postgres_running
    always_run: yes

  - name: Start postgresDB
    shell: "pg_ctl start -D {{ postgres_db_path }}"
    register: postgres_started
    become_user: "{{ postgres_user }}"
    when: postgres_running.stdout.find("/usr/bin/postgres") == True

  - name: Restart postgresDB
    shell: "pg_ctl restart -D {{ postgres_db_path }}"
    register: postgres_started
    become_user: "{{ postgres_user }}"
    when: postgres_installed.changed == True
    # if this is run it should trigger a
    # restart of the webserver AND the workers
